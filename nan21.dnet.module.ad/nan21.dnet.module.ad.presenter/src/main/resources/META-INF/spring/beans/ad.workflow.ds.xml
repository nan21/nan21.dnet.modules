<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"	 
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd">   
   
 	<bean id="ActDeploymentDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActDeploymentDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActDeploymentDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActDeployment" />
	  	<property name="paramClass" value="net.nan21.dnet.module.ad.workflow.ds.param.ActDeploymentDsParam" />	
	  	<property name="queryBuilderClass" value="net.nan21.dnet.module.ad.workflow.ds.qb.ActDeploymentDsQueryBuilder" />	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActDeployment" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActDeploymentDs" />
	</bean>
   
 	<bean id="ActDeploymentLovDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActDeploymentLovDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActDeploymentLovDs" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActDeployment" />
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActDeploymentLov" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActDeploymentLovDs" />
	</bean>
   
 	<bean id="ActProcessDefinitionDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessDefinitionDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActProcessDefinitionDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActProcessDefinition" />
	  	<property name="paramClass" value="net.nan21.dnet.module.ad.workflow.ds.param.ActProcessDefinitionDsParam" />	
	  	<property name="rpcData" >
	  		<map>
	  			<entry key="serviceStartProcess">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.ActProcessDefinitionPD"/>
	  				<constructor-arg name="methodName" value="startInstance" />
	  			</bean>	
	  			</entry>	  			
	  			<entry key="getDiagram">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.ActProcessDefinitionPD"/>
	  				<constructor-arg name="methodName" value="getDiagram" />
	  			</bean>	
	  			</entry>	  			
	  			<entry key="getStartForm">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.ActProcessDefinitionPD"/>
	  				<constructor-arg name="methodName" value="getStartForm" />
	  			</bean>	
	  			</entry>	  			
	  		</map>
	  	</property>	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActProcessDefinition" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessDefinitionDs" />
	  	<property name="serviceMethods" >
	  		<list>
	  			<value type="java.lang.String">serviceStartProcess</value>
	  			<value type="java.lang.String">getDiagram</value>
	  			<value type="java.lang.String">getStartForm</value>
			</list>	  		 
	  	</property>	
	</bean>
   
 	<bean id="ActProcessDefinitionLovDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessDefinitionLovDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessDefinitionLovDs" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActProcessDefinition" />
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActProcessDefinitionLov" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessDefinitionLovDs" />
	</bean>
   
 	<bean id="ActProcessInstanceDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessInstanceDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActProcessInstanceDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActProcessInstanceHistory" />
	  	<property name="paramClass" value="net.nan21.dnet.module.ad.workflow.ds.param.ActProcessInstanceDsParam" />	
	  	<property name="queryBuilderClass" value="net.nan21.dnet.module.ad.workflow.ds.qb.ActProcessInstanceDsQueryBuilder" />	
	  	<property name="rpcData" >
	  		<map>
	  			<entry key="killProcessInstance">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.ActProcessInstancePD"/>
	  				<constructor-arg name="methodName" value="killInstance" />
	  			</bean>	
	  			</entry>	  			
	  		</map>
	  	</property>	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActProcessInstance" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessInstanceDs" />
	  	<property name="serviceMethods" >
	  		<list>
	  			<value type="java.lang.String">killProcessInstance</value>
			</list>	  		 
	  	</property>	
	</bean>
   
 	<bean id="ActProcessInstanceHistoryDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessInstanceHistoryDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActProcessInstanceHistoryDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActProcessInstanceHistory" />
	  	<property name="paramClass" value="net.nan21.dnet.module.ad.workflow.ds.param.ActProcessInstanceHistoryDsParam" />	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActProcessInstanceHistory" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActProcessInstanceHistoryDs" />
	</bean>
   
 	<bean id="ActTaskInstanceDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActTaskInstanceDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActTaskInstanceDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActTaskInstanceHistory" />
	  	<property name="paramClass" value="net.nan21.dnet.module.ad.workflow.ds.param.ActTaskInstanceDsParam" />	
	  	<property name="queryBuilderClass" value="net.nan21.dnet.module.ad.workflow.ds.qb.ActTaskInstanceDsQueryBuilder" />	
	  	<property name="rpcData" >
	  		<map>
	  			<entry key="assignTask">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.ActTaskInstancePD"/>
	  				<constructor-arg name="methodName" value="assignTask" />
	  			</bean>	
	  			</entry>	  			
	  			<entry key="completeTask">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.ActTaskInstancePD"/>
	  				<constructor-arg name="methodName" value="completeTask" />
	  			</bean>	
	  			</entry>	  			
	  		</map>
	  	</property>	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActTaskInstance" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActTaskInstanceDs" />
	  	<property name="serviceMethods" >
	  		<list>
	  			<value type="java.lang.String">assignTask</value>
	  			<value type="java.lang.String">completeTask</value>
			</list>	  		 
	  	</property>	
	</bean>
   
 	<bean id="ActTaskInstanceHistoryDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActTaskInstanceHistoryDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActTaskInstanceHistoryDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActTaskInstanceHistory" />
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActTaskInstanceHistory" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActTaskInstanceHistoryDs" />
	</bean>
   
 	<bean id="ActMyTaskDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActMyTaskDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActMyTaskDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActTask" />
	  	<property name="queryBuilderClass" value="net.nan21.dnet.module.ad.workflow.ds.qb.ActMyTaskDsQueryBuilder" />	
	  	<property name="rpcData" >
	  		<map>
	  			<entry key="completeTask">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.ActMyTaskPD"/>
	  				<constructor-arg name="methodName" value="complete" />
	  			</bean>	
	  			</entry>	  			
	  		</map>
	  	</property>	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActMyTask" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActMyTaskDs" />
	  	<property name="serviceMethods" >
	  		<list>
	  			<value type="java.lang.String">completeTask</value>
			</list>	  		 
	  	</property>	
	</bean>
   
 	<bean id="ActMyTaskHistoryDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActMyTaskHistoryDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActMyTaskHistoryDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActTaskInstanceHistory" />
	  	<property name="queryBuilderClass" value="net.nan21.dnet.module.ad.workflow.ds.qb.ActMyTaskHistoryDsQueryBuilder" />	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActMyTaskHistory" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActMyTaskHistoryDs" />
	</bean>
   
 	<bean id="ActAvailableTaskDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActAvailableTaskDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.ActAvailableTaskDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.ActTask" />
	  	<property name="rpcData" >
	  		<map>
	  			<entry key="assignTask">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.ActAvailableTaskPD"/>
	  				<constructor-arg name="methodName" value="claim" />
	  			</bean>	
	  			</entry>	  			
	  		</map>
	  	</property>	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="ActAvailableTask" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.ActAvailableTaskDs" />
	  	<property name="serviceMethods" >
	  		<list>
	  			<value type="java.lang.String">assignTask</value>
			</list>	  		 
	  	</property>	
	</bean>
   
 	<bean id="WfDefProcessDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.WfDefProcessDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.WfDefProcessDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.WfDefProcess" />
	  	<property name="rpcData" >
	  		<map>
	  			<entry key="deployProcess">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.WfDefProcessPD"/>
	  				<constructor-arg name="methodName" value="deployProcess" />
	  			</bean>	
	  			</entry>	  			
	  			<entry key="getDiagram">
	  			<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
	  				<constructor-arg name="delegateClass" value="net.nan21.dnet.module.ad._presenterdelegates.workflow.WfDefProcessPD"/>
	  				<constructor-arg name="methodName" value="getDiagram" />
	  			</bean>	
	  			</entry>	  			
	  		</map>
	  	</property>	
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="WfDefProcess" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.WfDefProcessDs" />
	  	<property name="serviceMethods" >
	  		<list>
	  			<value type="java.lang.String">deployProcess</value>
	  			<value type="java.lang.String">getDiagram</value>
			</list>	  		 
	  	</property>	
	</bean>
   
 	<bean id="WfDefNodeDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.WfDefNodeDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.WfDefNodeDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.WfDefNode" />
	  	<property name="converterClass" value="net.nan21.dnet.module.ad.workflow.ds.converter.WfDefNodeDsConv" />
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="WfDefNode" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.WfDefNodeDs" />
	</bean>
   
 	<bean id="WfDefNodeFieldDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.WfDefNodeFieldDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.WfDefNodeFieldDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.WfDefNodeField" />
	  	<property name="converterClass" value="net.nan21.dnet.module.ad.workflow.ds.converter.WfDefNodeFieldDsConv" />
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="WfDefNodeField" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.WfDefNodeFieldDs" />
	</bean>
   
 	<bean id="WfDefTransitionDsService" scope="prototype"
	  		class="net.nan21.dnet.core.presenter.service.BaseDsService"  >
	  	<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.WfDefTransitionDs" />
	  	<property name="filterClass" value="net.nan21.dnet.module.ad.workflow.ds.filter.WfDefTransitionDsFilter" />
	  	<property name="entityClass" value="net.nan21.dnet.module.ad.workflow.domain.entity.WfDefTransition" />
	  	<property name="converterClass" value="net.nan21.dnet.module.ad.workflow.ds.converter.WfDefTransitionDsConv" />
	</bean>
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="WfDefTransition" />
		<property name="modelClass" value="net.nan21.dnet.module.ad.workflow.ds.model.WfDefTransitionDs" />
	</bean>
      
</beans>
   